from pydantic import BaseModel, EmailStr, Field
from typing import List, Optional, Dict

# Auth
class Register(BaseModel):
    email: EmailStr
    password: str
    role: str  # "Individual" or "NGO"
    name: str
    age: Optional[int] = None
    location: str
    goals: Optional[str] = None

class Login(BaseModel):
    email: EmailStr
    password: str

class TokenOut(BaseModel):
    access_token: str
    token_type: str = "bearer"

# Surveys
class SurveyCreate(BaseModel):
    title: str
    description: Optional[str] = None
    sdg: int
    target_location: str
    questions: List[str]

class SurveyResponseIn(BaseModel):
    answers: Dict[int, str]

# Civic Reports
class CivicReportIn(BaseModel):
    category: str
    title: str
    content: str
    location: str

# SkillUp
class TutorialIn(BaseModel):
    title: str
    content: str
    sdg_tags: Optional[str] = None
    location: Optional[str] = None

class OpportunityIn(BaseModel):
    title: str
    details: str
    location: str
    sdg_tags: Optional[str] = None

# Discussion
class TopicIn(BaseModel):
    title: str
    body: str
    location: Optional[str] = None

class CommentIn(BaseModel):
    topic_id: int
    body: str

# Reports (NGO AI)
class ReportRequest(BaseModel):
    survey_id: int
    region: Optional[str] = None